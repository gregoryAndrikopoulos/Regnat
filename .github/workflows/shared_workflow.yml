name: Reusable Runner

on:
  workflow_call:
    inputs:
      npm_script:
        description: "Command to run tests"
        required: true
        type: string
      infra_enabled:
        description: "Bring infra up/down around the run"
        required: false
        default: true
        type: boolean
      artifact_suffix:
        description: "Suffix to append to artifact names"
        required: false
        default: ""
        type: string
      compose_profiles:
        description: "Docker Compose profiles to enable (e.g. firefox, edge, smoke)"
        required: false
        default: ""
        type: string

jobs:
  run-suite:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    env:
      TEST_USER_EMAIL_1: ${{ secrets.TEST_USER_EMAIL_1 }}
      TEST_USER_PASSWORD_1: ${{ secrets.TEST_USER_PASSWORD_1 }}

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v5

      - name: 🔧 Install tools from .tool-versions (node & pnpm)
        uses: asdf-vm/actions/install@v4

      - name: 🗃️ Cache pnpm package store
        uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm/store
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: ⚙️ Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🐳 Infra up (Docker Compose)
        if: ${{ inputs.infra_enabled }}
        env:
          COMPOSE_PROFILES: ${{ inputs.compose_profiles }}
        run: pnpm infra:up

      - name: ⏳ Wait for Infra readiness
        if: ${{ inputs.infra_enabled }}
        shell: bash
        run: |
          set -euo pipefail

          # --- Hub ready ---
          ready=false
          for i in {1..30}; do
            if [[ "$(pnpm -s infra:status || true)" == "true" ]]; then
              ready=true
              echo "Infra is ready."
              break
            fi
            echo "Infra not ready yet... ($i/30)"
            sleep 2
          done
          if [[ "$ready" != "true" ]]; then
            echo "Infra failed to become ready in time" >&2
            exit 1
          fi

          # --- Silent brief node wait (only if profiles request them) ---
          need_nodes=false; want_ff=false; want_edge=false
          case ",${{ inputs.compose_profiles }}," in
            *,smoke,*)   need_nodes=true; want_ff=true; want_edge=true ;;
            *,firefox,*) need_nodes=true; want_ff=true ;;
            *,edge,*)    need_nodes=true; want_edge=true ;;
          esac

          if $need_nodes; then
            for _ in {1..30}; do
              payload="$(curl -sf http://localhost:4444/se/grid/distributor/status || curl -sf http://localhost:4444/se/grid/status || echo '{}')"

              have_ff=false
              have_edge=false
              if grep -Eqi '"browserName"\s*:\s*"firefox"' <<<"$payload"; then
                have_ff=true
              fi
              # Edge may appear as MicrosoftEdge, msedge, or edge depending on image
              if grep -Eqi '"browserName"\s*:\s*"(MicrosoftEdge|msedge|edge)"' <<<"$payload"; then
                have_edge=true
              fi

              ok=true
              if $want_ff && ! $have_ff; then ok=false; fi
              if $want_edge && ! $have_edge; then ok=false; fi

              $ok && break
              sleep 1
            done
            # We keep this silent to match E2E log style.
          fi

      - name: 🧪 Run Tests
        env:
          CI: true
          FORCE_COLOR: "3"
        run: ${{ inputs.npm_script }}

      - name: 📊 Generate Allure HTML
        if: ${{ always() }}
        run: pnpm exec allure generate allure-results --clean -o allure-report || echo "No allure results"

      - name: 📎 Upload Allure artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: allure${{ inputs.artifact_suffix }}
          path: |
            allure-results/**
            allure-report/**
          if-no-files-found: warn
          retention-days: 14

      - name: 📸 Upload screenshots (on failure)
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: screenshots${{ inputs.artifact_suffix }}
          path: reports/screenshots/**
          if-no-files-found: ignore
          retention-days: 7

      - name: 📎 Upload JUnit (on failure)
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: junit-xml${{ inputs.artifact_suffix }}
          path: reports/junit/**
          if-no-files-found: ignore
          retention-days: 14

      - name: 🧹 Infra down (cleanup)
        if: ${{ always() && inputs.infra_enabled }}
        run: pnpm infra:down
