name: e2e Test

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  e2e-test:
    runs-on: ubuntu-latest

    # Make all credential sets available to the job (each spec picks its own via getCreds(n))
    env:
      TEST_USER_EMAIL_1: ${{ secrets.TEST_USER_EMAIL_1 }}
      TEST_USER_PASSWORD_1: ${{ secrets.TEST_USER_PASSWORD_1 }}
      TEST_USER_EMAIL_2: ${{ secrets.TEST_USER_EMAIL_2 }}
      TEST_USER_PASSWORD_2: ${{ secrets.TEST_USER_PASSWORD_2 }}
      TEST_USER_EMAIL_3: ${{ secrets.TEST_USER_EMAIL_3 }}
      TEST_USER_PASSWORD_3: ${{ secrets.TEST_USER_PASSWORD_3 }}

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v5

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: 🧰 Setup pnpm
        run: npm install -g pnpm@10.13.1

      - name: 🗃️ Cache pnpm package store
        uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm/store
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: ⚙️ Install dependencies
        run: pnpm install

      - name: 🐳 Grid up (Docker Compose)
        run: pnpm grid:up

      - name: ⏳ Wait for Grid readiness
        shell: bash
        run: |
          for i in {1..30}; do
            READY=$(pnpm -s grid:status || true)
            if [[ "$READY" == "true" ]]; then
              echo "Grid is ready"
              exit 0
            fi
            echo "Grid not ready yet... ($i/30)"
            sleep 2
          done
          echo "Grid failed to become ready in time" >&2
          exit 1

      - name: ✨ Ensure Allure CLI
        run: pnpm exec allure --version || true

      - name: 🧪 Run e2e Test
        env:
          CI: true
          FORCE_COLOR: "3"
        run: pnpm test:ci

      - name: 📊 Generate Allure HTML
        if: always()
        run: pnpm exec allure generate allure-results --clean -o allure-report || echo "No allure results"

      - name: 📎 Upload Allure artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure
          path: |
            allure-results/**
            allure-report/**
          if-no-files-found: ignore
          retention-days: 14

      - name: 📎 Upload JUnit (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: junit-xml
          path: reports/junit/**
          if-no-files-found: ignore
          retention-days: 14

      - name: 🧹 Grid down (cleanup)
        if: always()
        run: pnpm grid:down
